name: Deploy

on:
  push:
    branches: main
  workflow_dispatch:


jobs:
  deploy:
    name: Deploy
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_API }}

      - name: Docker Auth
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.GCP_GAR_LOCATION }}-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY_API }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ vars.GCP_GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_CLOUD_RUN_SERVICE_NAME_API }}/${{ vars.GCP_CLOUD_RUN_SERVICE_NAME_API }}:${{ github.sha }}" ./
          docker push "${{ vars.GCP_GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_CLOUD_RUN_SERVICE_NAME_API }}/${{ vars.GCP_CLOUD_RUN_SERVICE_NAME_API }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ vars.GCP_CLOUD_RUN_SERVICE_NAME_API }}
          region: ${{ vars.GCP_REGION }}
          image: ${{ vars.GCP_GAR_LOCATION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GCP_CLOUD_RUN_SERVICE_NAME_API }}/${{ vars.GCP_CLOUD_RUN_SERVICE_NAME_API }}:${{ github.sha }}
          flags: |
            --port=8080
            --timeout=300
            --allow-unauthenticated
            --min-instances=1
          secrets: |
            MEILISEARCH_API_KEY=MEILISEARCH_API_KEY:latest
            MEILISEARCH_HOST=MEILISEARCH_HOST:latest
            KEYSTONE_GRAPHQL_SCHEMA_URL=KEYSTONE_GRAPHQL_SCHEMA_URL:latest
            CLOUDINARY_API_KEY=CLOUDINARY_API_KEY:latest
            CLOUDINARY_API_SECRET=CLOUDINARY_API_SECRET:latest
            CLOUDINARY_CLOUD_NAME=CLOUDINARY_CLOUD_NAME:latest
          env_vars: |
            CORS_ORIGIN_WHITELIST=${{ vars.CORS_ORIGIN_WHITELIST }}
            

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      - name: Warm up service
        run: |
          for i in {1..5}; do
            curl -fsS "${{ steps.deploy.outputs.url }}" && exit 0
            echo "Retrying in 3s..."
            sleep 3
          done
          echo "Service did not respond successfully" && exit 1

      
